<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>54.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Type_as_Follow_Up</name>
        <label>Type as Follow-Up</label>
        <locationX>1634</locationX>
        <locationY>431</locationY>
        <assignmentItems>
            <assignToReference>$Record.Type</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Follow-up</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Type_as_LinkedIn_Connect_Request</name>
        <label>Type as LinkedIn Connect Request</label>
        <locationX>1106</locationX>
        <locationY>551</locationY>
        <assignmentItems>
            <assignToReference>$Record.Type</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>LinkedIn Connection Request</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Type_as_LinkedIn_InMail_Sent</name>
        <label>Type as LinkedIn InMail Sent</label>
        <locationX>50</locationX>
        <locationY>551</locationY>
        <assignmentItems>
            <assignToReference>$Record.Type</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>LinkedIn InMail Sent</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Type_as_LinkedIn_Response</name>
        <label>Type as LinkedIn Response</label>
        <locationX>578</locationX>
        <locationY>551</locationY>
        <assignmentItems>
            <assignToReference>$Record.Type</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>LinkedInResponse</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Type_as_Other</name>
        <label>Type as Other</label>
        <locationX>1898</locationX>
        <locationY>431</locationY>
        <assignmentItems>
            <assignToReference>$Record.Type</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Other</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <constants>
        <name>ConnectionRequest1</name>
        <dataType>String</dataType>
        <value>
            <stringValue>LinkedIn connect</stringValue>
        </value>
    </constants>
    <constants>
        <name>ConnectionRequest2</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Connection Request</stringValue>
        </value>
    </constants>
    <constants>
        <name>InMailsent1</name>
        <dataType>String</dataType>
        <value>
            <stringValue>InMail sent from Sales Navigator</stringValue>
        </value>
    </constants>
    <constants>
        <name>InMailsent2</name>
        <dataType>String</dataType>
        <value>
            <stringValue>InMail envoyé depuis Sales Navigator</stringValue>
        </value>
    </constants>
    <constants>
        <name>LinkedInInMailSent</name>
        <dataType>String</dataType>
        <value>
            <stringValue>LinkedIn InMail Sent</stringValue>
        </value>
    </constants>
    <constants>
        <name>LinkedInResponse</name>
        <dataType>String</dataType>
        <value>
            <stringValue>LinkedIn Response</stringValue>
        </value>
    </constants>
    <constants>
        <name>Messagesent1</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Message sent from Sales Navigator</stringValue>
        </value>
    </constants>
    <constants>
        <name>Messagesent2</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Message envoyé depuis Sales Navigator</stringValue>
        </value>
    </constants>
    <constants>
        <name>Response1</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Message response from Sales Navigator</stringValue>
        </value>
    </constants>
    <constants>
        <name>Response2</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Message de réponse depuis Sales Navigator</stringValue>
        </value>
    </constants>
    <constants>
        <name>SendMessage</name>
        <dataType>String</dataType>
        <value>
            <stringValue>Send Message</stringValue>
        </value>
    </constants>
    <decisions>
        <name>Assign_Task_Type</name>
        <label>Assign Task Type</label>
        <locationX>1172</locationX>
        <locationY>311</locationY>
        <defaultConnectorLabel>None</defaultConnectorLabel>
        <rules>
            <name>LinkedIn_InMail</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <elementReference>InMailsent1</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <elementReference>InMailsent2</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <elementReference>Messagesent1</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <elementReference>Messagesent2</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>SendMessage</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>sequence_step_linkedin_send_message</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Is_Type_LinkedInInMail_Sent</targetReference>
            </connector>
            <label>LinkedIn InMail</label>
        </rules>
        <rules>
            <name>LinkedIn_Response</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <elementReference>Response1</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <elementReference>Response2</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Is_Type_LinkedIn_Response</targetReference>
            </connector>
            <label>LinkedIn Response</label>
        </rules>
        <rules>
            <name>LinkedIn_Connection_Request</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <elementReference>ConnectionRequest1</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>ConnectionRequest2</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>sequence_step_linkedin_send_connection_request</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Is_Type_LinkedIn_Connection_Request</targetReference>
            </connector>
            <label>LinkedIn Connection Request</label>
        </rules>
        <rules>
            <name>Follow_Up_Type</name>
            <conditionLogic>(1 AND 2) AND (3 OR 4) AND 5</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>[Outreach] [Other]</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Follow up</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>sequence_open</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Follow-up</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Type_as_Follow_Up</targetReference>
            </connector>
            <label>Follow-Up Type</label>
        </rules>
        <rules>
            <name>Other_Type</name>
            <conditionLogic>1 AND 2 AND 3 AND 4 AND 5</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue> [Outreach] [Other]</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>sequence_step_task</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>sequence_step_linkedin_view_profile</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Other</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Type_as_Other</targetReference>
            </connector>
            <label>Other Type</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Type_LinkedIn_Connection_Request</name>
        <label>Is Type LinkedIn Connection Request</label>
        <locationX>1238</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Yes</defaultConnectorLabel>
        <rules>
            <name>No_1_0</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>LinkedIn Connection Request</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Type_as_LinkedIn_Connect_Request</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Type_LinkedIn_Response</name>
        <label>Is Type LinkedIn Response</label>
        <locationX>710</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Yes</defaultConnectorLabel>
        <rules>
            <name>No_1</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>LinkedInResponse</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Type_as_LinkedIn_Response</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Type_LinkedInInMail_Sent</name>
        <label>Is Type LinkedInInMail Sent</label>
        <locationX>182</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Yes</defaultConnectorLabel>
        <rules>
            <name>No</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>LinkedInInMailSent</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Type_as_LinkedIn_InMail_Sent</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <description>Update Task Type for tasks created from LinkedIn Sales Navigator/Outreach.io.</description>
    <environments>Default</environments>
    <interviewLabel>Update Task Type for LinkedIn Sales Navigator Tasks {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Update Task Type for LinkedIn Tasks</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <start>
        <locationX>1046</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Assign_Task_Type</targetReference>
        </connector>
        <object>Task</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Draft</status>
</Flow>
